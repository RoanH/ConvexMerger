plugins{
	id 'eclipse'
	id 'application'
	id 'com.gradleup.shadow' version '8.3.5'
	id 'edu.sc.seis.launch4j' version '3.0.6'
	id 'com.github.spotbugs' version '6.0.18'
	id 'jacoco'
}

import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort

sourceSets{
	main{
		java.srcDirs = ['src']
		resources.srcDirs = ['resources']
	}

	test.java.srcDirs = ['test']
}

dependencies{
	//Util
	implementation 'dev.roanh.util:util:2.5'
	
	//Testing
	testImplementation("org.junit.jupiter:junit-jupiter:5.12.0")
	testImplementation("org.junit.platform:junit-platform-launcher")
}

repositories{
	//Local cache
	if(project.hasProperty("nexusPublic")){
		maven{
			allowInsecureProtocol = true
			url "$nexusPublic"
		}
	}
	mavenCentral()
}

version = findProperty("refName") ?: 'SNAPSHOT'
if(version.matches("v\\d+\\.\\d+")){
	version = version.substring(1)
}

eclipse.classpath.downloadSources = true
eclipse.classpath.downloadJavadoc = true
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
jacocoTestReport.reports.xml.required = true
sourceCompatibility = 1.8
javadoc.options.memberLevel = JavadocMemberLevel.PRIVATE
javadoc.options.encoding = 'UTF-8'
shadowJar.archiveBaseName = 'ConvexMerger'
shadowJar.archiveVersion = 'v' + version
shadowJar.archiveClassifier = ''
application.mainClass = 'dev.roanh.convexmerger.Main'

test{
	useJUnitPlatform()
	dependsOn 'cleanTest'

	testLogging{
		events "passed", "skipped", "failed"
		showStandardStreams = true
	}
}

spotbugs{
	showProgress = true
	effort = Effort.valueOf('MAX')
	reportLevel = Confidence.valueOf('LOW')
	excludeFilter = file("$rootDir/exclude.xml")
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask){
	reports{
		html{
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

shadowJar{
	mergeServiceFiles()
}

launch4j{
	jarTask = project.tasks.shadowJar
	mainClassName = application.mainClass
	icon = "${projectDir}/icon.ico"
	jreMinVersion = project.sourceCompatibility.toString()
	bundledJrePath = "%JAVA_HOME%"
	outfile = 'ConvexMerger-v' + project.version + '.exe'
	fileDescription = "ConvexMerger"
	productName = rootProject.name
	version = project.version
	textVersion = project.version
	copyright = "Roan Hofland"
}
